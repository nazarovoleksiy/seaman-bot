// bot/handlers/feedback.js
import { saveFeedback, getLang } from '../../db/database.js';

const pending = new Map(); // userId -> –∂–¥—ë–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞

export function registerFeedbackHandler(bot) {
    bot.command('feedback', async (ctx) => {
        pending.set(ctx.from.id, true);
        const lang = getLang(ctx.from.id);
        await ctx.reply(
            lang === 'ru'
                ? 'üí¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.'
                : 'üí¨ Please write your feedback in the next message.'
        );
    });

    // –í–ê–ñ–ù–û: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ, –µ—Å–ª–∏ –º—ã –ù–ï –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    bot.on('text', async (ctx, next) => {
        const uid = ctx.from.id;

        // –∫–æ–º–∞–Ω–¥—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ
        if (ctx.message?.text?.startsWith('/')) return next();

        if (!pending.has(uid)) return next(); // ‚Üê –≤–æ—Ç —ç—Ç–æ –∫–ª—é—á–µ–≤–æ–µ

        pending.delete(uid);
        const text = ctx.message.text?.trim();
        if (!text) return next();

        saveFeedback(uid, ctx.from.username, text);

        const lang = getLang(uid);
        await ctx.reply(lang === 'ru' ? 'üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!' : 'üôè Thanks for your feedback!');
    });
}
