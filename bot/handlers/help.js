// bot/handlers/help.js
import { getLang } from '../../db/database.js';

const ADMIN_ID = Number(process.env.ADMIN_ID || 0);
const isAdmin = (uid) => ADMIN_ID && Number(uid) === ADMIN_ID;

function helpText(lang, admin) {
    if (lang === 'ru') {
        let t = 'üìò *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã*\n\n' +
            '/start ‚Äî –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ / –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫\n' +
            '/access ‚Äî –º–æ–π –¥–æ—Å—Ç—É–ø: Day Pass (—Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å), –∫—Ä–µ–¥–∏—Ç—ã, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫\n' +
            '/limit ‚Äî –º–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ (lifetime)\n' +
            '/feedback ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n' +
            '/buy ‚Äî –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø\n' +
            '/stats ‚Äî –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç—É–ø\n' +
            '/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n\n' +
            'üì∏ –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –≤–æ–ø—Ä–æ—Å–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ (A/B/C/D) ‚Äî —è –Ω–∞–π–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –∫—Ä–∞—Ç–∫–æ –æ–±—ä—è—Å–Ω—é –ø–æ—á–µ–º—É.';
        if (admin) {
            t += '\n\nüõ† *–ê–¥–º–∏–Ω*\n' +
                '/myid ‚Äî –º–æ–π Telegram ID\n' +
                '/getuser <id> ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n' +
                '/resetuser <id> ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ–¥—Ç–≤.: /resetuser_confirm <id>)\n' +
                '/resetme ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è\n' +
                '/resetall ‚Äî –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å (–ø–æ–¥—Ç–≤.: /resetall_confirm)';
        }
        return t;
    } else if (lang === 'uk') {
        let t = 'üìò *–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏*\n\n' +
            '/start ‚Äî –ø–æ—á–∞—Ç–∏ –∑–∞–Ω–æ–≤–æ / –æ–±—Ä–∞—Ç–∏ –º–æ–≤—É\n' +
            '/access ‚Äî –º—ñ–π –¥–æ—Å—Ç—É–ø: Day Pass (—Å–∫—ñ–ª—å–∫–∏ –ª–∏—à–∏–ª–æ—Å—å), –∫—Ä–µ–¥–∏—Ç–∏, –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –∑–∞–ª–∏—à–æ–∫\n' +
            '/limit ‚Äî –º—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –∑–∞–ª–∏—à–æ–∫ (lifetime)\n' +
            '/feedback ‚Äî –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫\n' +
            '/buy ‚Äî –ø—Ä–∏–¥–±–∞—Ç–∏ –¥–æ—Å—Ç—É–ø\n' +
            '/stats ‚Äî –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞ –¥–æ—Å—Ç—É–ø\n' +
            '/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É\n\n' +
            'üì∏ –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ –ø–∏—Ç–∞–Ω–Ω—è –∑ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ (A/B/C/D) ‚Äî —è –∑–Ω–∞–π–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ –∫–æ—Ä–æ—Ç–∫–æ –ø–æ—è—Å–Ω—é —á–æ–º—É.';
        if (admin) {
            t += '\n\nüõ† *–ê–¥–º—ñ–Ω*\n' +
                '/myid ‚Äî –º—ñ–π Telegram ID\n' +
                '/getuser <id> ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n' +
                '/resetuser <id> ‚Äî —Å–∫–∏–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–ø—ñ–¥—Ç–≤.: /resetuser_confirm <id>)\n' +
                '/resetme ‚Äî —Å–∫–∏–Ω—É—Ç–∏ —Å–µ–±–µ\n' +
                '/resetall ‚Äî –ø–æ–≤–Ω–∏–π —Å–∫–∏–¥–∞–Ω–Ω—è (–ø—ñ–¥—Ç–≤.: /resetall_confirm)';
        }
        return t;
    } else {
        let t = 'üìò *Available commands*\n\n' +
            '/start ‚Äî restart / choose language\n' +
            '/access ‚Äî my access: Day Pass (time left), credits, free left\n' +
            '/limit ‚Äî my free lifetime remaining\n' +
            '/feedback ‚Äî leave feedback\n' +
            '/buy ‚Äî purchase access\n' +
            '/stats ‚Äî my stats & access\n' +
            '/help ‚Äî show this help\n\n' +
            'üì∏ Just send a photo with options (A/B/C/D) ‚Äî I will find the correct answer and explain briefly.';
        if (admin) {
            t += '\n\nüõ† *Admin*\n' +
                '/myid ‚Äî my Telegram ID\n' +
                '/getuser <id> ‚Äî user info\n' +
                '/resetuser <id> ‚Äî reset user (confirm: /resetuser_confirm <id>)\n' +
                '/resetme ‚Äî reset myself\n' +
                '/resetall ‚Äî full wipe (confirm: /resetall_confirm)';
        }
        return t;
    }
}

export function helpInlineKeyboard(lang) {
    const label = lang === 'ru' ? '‚ùì –ü–æ–º–æ—â—å'
        : lang === 'uk' ? '‚ùì –î–æ–ø–æ–º–æ–≥–∞'
            : '‚ùì Help';
    return { inline_keyboard: [[{ text: label, callback_data: 'help:open' }]] };
}

export function registerHelpHandler(bot) {
    bot.command('help', async (ctx) => {
        const lang = getLang(ctx.from.id);
        const admin = isAdmin(ctx.from.id);
        await ctx.reply(helpText(lang, admin), { parse_mode: 'Markdown' });
    });

    bot.action('help:open', async (ctx) => {
        try { await ctx.answerCbQuery(); } catch {}
        const lang = getLang(ctx.from.id);
        const admin = isAdmin(ctx.from.id);
        await ctx.reply(helpText(lang, admin), { parse_mode: 'Markdown' });
    });
}
