// bot/handlers/feedback.js
import { saveFeedback, getLang } from '../../db/database.js';

const pending = new Map(); // userId -> –∂–¥—ë–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
const ADMIN_ID = Number(process.env.ADMIN_ID || 0);
const FEEDBACK_CHAT_ID = process.env.FEEDBACK_CHAT_ID || null;

export function registerFeedbackHandler(bot) {
    // –∫–Ω–æ–ø–∫–∞ –∏–∑ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é
    bot.action('fb:start', async (ctx) => {
        try { await ctx.answerCbQuery(); } catch {}
        pending.set(ctx.from.id, true);
        const lang = getLang(ctx.from.id);
        await ctx.reply(
            lang === 'ru' ? 'üí¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.'
                : lang === 'uk' ? 'üí¨ –ù–∞–ø–∏—à–∏ —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.'
                    : 'üí¨ Please write your feedback in the next message.'
        );
    });

    // –∫–æ–º–∞–Ω–¥–∞ –≤—Ä—É—á–Ω—É—é
    bot.command('feedback', async (ctx) => {
        pending.set(ctx.from.id, true);
        const lang = getLang(ctx.from.id);
        await ctx.reply(
            lang === 'ru' ? 'üí¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.'
                : lang === 'uk' ? 'üí¨ –ù–∞–ø–∏—à–∏ —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.'
                    : 'üí¨ Please write your feedback in the next message.'
        );
    });

    // –ø–µ—Ä–µ—Ö–≤–∞—Ç —Ç–µ–∫—Å—Ç–∞ –¢–û–õ–¨–ö–û –∫–æ–≥–¥–∞ –∂–¥—ë–º –æ—Ç–∑—ã–≤
    bot.on('text', async (ctx, next) => {
        const uid = ctx.from.id;
        const text = ctx.message?.text || '';

        // –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ
        if (text.startsWith('/')) return next();
        if (!pending.has(uid)) return next();

        pending.delete(uid);
        const clean = text.trim();
        if (!clean) return;

        // —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        saveFeedback(uid, ctx.from.username, clean);

        // –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const lang = getLang(uid);
        await ctx.reply(
            lang === 'ru' ? 'üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!'
                : lang === 'uk' ? 'üôè –î—è–∫—É—î–º–æ –∑–∞ –≤—ñ–¥–≥—É–∫!'
                    : 'üôè Thanks for your feedback!'
        );

        // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É / –≤ —á–∞—Ç
        const where = FEEDBACK_CHAT_ID || (ADMIN_ID ? String(ADMIN_ID) : null);
        if (where) {
            const who = ctx.from.username ? `@${ctx.from.username}` : `id:${uid}`;
            const when = new Date().toISOString();
            const msg =
                `üÜï New feedback\n` +
                `üë§ ${who}\n` +
                `üïí ${when}\n\n` +
                `üí¨ ${clean}`;
            try {
                await ctx.telegram.sendMessage(where, msg, { disable_web_page_preview: true });
            } catch (e) {
                console.error('feedback notify error:', e);
            }
        }
    });
}
